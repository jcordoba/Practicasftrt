// Esquema de base de datos para SION Prácticas FTR
// Modelos para RBAC y gestión de prácticas

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  practicesAsStudent Practice[]       @relation("StudentToPractice")
  practicesAsTutor   Practice[]       @relation("TutorToPractice")
  practicesAsTeacher Practice[]       @relation("TeacherToPractice")
  reports            PracticeReport[] @relation("UserReports")
}

enum Role {
  STUDENT
  TUTOR
  PRACTICE_TEACHER
  COORDINATOR
  DEAN
  TECHNICAL_ADMIN
}

model Practice {
  id          String         @id @default(uuid())
  student     User           @relation("StudentToPractice", fields: [studentId], references: [id])
  studentId   String
  tutor       User           @relation("TutorToPractice", fields: [tutorId], references: [id])
  tutorId     String
  teacher     User           @relation("TeacherToPractice", fields: [teacherId], references: [id])
  teacherId   String
  institution String
  startDate   DateTime
  endDate     DateTime
  status      PracticeStatus @default(PENDING)
  hours       Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  reports PracticeReport[]
}

enum PracticeStatus {
  PENDING
  APPROVED
  REJECTED
  IN_PROGRESS
  COMPLETED
}

model PracticeReport {
  id           String   @id @default(uuid())
  practice     Practice @relation(fields: [practiceId], references: [id])
  practiceId   String
  user         User     @relation("UserReports", fields: [userId], references: [id])
  userId       String
  date         DateTime
  activities   String
  hours        Int
  observations String
}
